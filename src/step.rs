//! 定义一种棋子的移动方式
//! 
//! ### 移动描述
//! 
//! 由于有棋面上下文的支持，所以我们通过绝对的坐标来描述棋子的移动方式。 
//! 即棋子的起点和终点，棋子的种类可以由棋面上下文推断出来。 
//! 
//! 另外，出于支持回滚操作的便利性，我们还需要记录被吃掉的棋子的类型（如果有）

use crate::{point::Point, piece::ChessPiece};

/// 一步棋子的移动 
/// 
/// 由于有棋面上下文的支持，所以我们通过绝对的坐标来描述棋子的移动方式。 
/// 即棋子的起点和终点，棋子的种类可以由棋面上下文推断出来。 
/// 
/// 另外，出于支持回滚操作的便利性，我们还需要记录被吃掉的棋子的类型（如果有） 
#[derive( Debug, Clone, PartialEq, Eq )] 
pub struct Step {
    /// 棋子的起点
    pub from: Point,
    /// 棋子的终点
    pub to: Point,
    /// 被吃掉的棋子的类型（如果有）
    pub eaten: ChessPiece, 
}